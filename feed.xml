<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blogHez</title>
    <link href="https://baronhez.github.io/feed.xml" rel="self" />
    <link href="https://baronhez.github.io" />
    <updated>2022-08-27T17:17:33+02:00</updated>
    <author>
        <name>Jonathan Ródenas López</name>
    </author>
    <id>https://baronhez.github.io</id>

    <entry>
        <title>How to install and configure SSH to be secure</title>
        <author>
            <name>Jonathan Ródenas López</name>
        </author>
        <link href="https://baronhez.github.io/how-to-configure-ssh-to-be-secure/"/>
        <id>https://baronhez.github.io/how-to-configure-ssh-to-be-secure/</id>

        <updated>2022-08-27T17:17:33+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://baronhez.github.io/media/posts/10/ssh-transformed11.jpeg" alt="Eh" />
                    It should&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://baronhez.github.io/media/posts/10/ssh-transformed11.jpeg" alt="Eh" />
                
    <h2 id="it-should-be-ready-in-just-two-minutes-as-simple-as-that">
      It should be ready in just two minutes, as simple as that.
    </h2>

  <p>
    I will show you how to configure SSH and make it more secure within a couple of minutes.
  </p>

    <h3 id="connect-to-your-server-using-keys">
      Connect to your server using keys
    </h3>

  <p>
    First, connect to your server using SSH. Oh, don't you have SSH in your server yet? Ok, then, run these commands in your server:
  </p>
<pre class="line-numbers  language-bash"><code>sudo apt-get install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh</code></pre>

  <p>
    Apt-get doesn't work? Ok, you're not using a debian based distro in your server, so you have to search how to install packages in your distro (it is a 1 minuto google search, I promise).
  </p>

  <p>
    Ok, now that SSH is working in our server, connect to the server from another computer, just for testing. If it is working, now run this command in your server (is going to create the directory for the keys and change the permissions of that directory):
  </p>
<pre class="line-numbers  language-bash"><code>mkdir ~/.ssh && chmod 700 ~/.ssh</code></pre>

  <p>
    Now, we have to generate the keys in our computer.
  </p>
<pre class="line-numbers  language-bash"><code># For Windows:
ssh-keygen -b 4096
# The keys are stored in "%userprofile%\.ssh" as id_rsa and id_rsa.pub by default.
#Now, transfer the public key to the server.
scp $env:USERPROFILE/.ssh/id_rsa.pub Username@123.445.566.233:~/.ssh/authorized_keys    
# Replace the Username and IP with your own Username and Server IP.
# For Linux:
ssh-keygen -b 4096
# The keys are stored in "~/.ssh" as id_rsa and id_rsa.pub by default.
# Now, transfer the public key to the server.
ssh-copy-id Username@123.445.566.233
# Replace the Username and IP with your own Username and Server IP.
# For Mac:
ssh-keygen -b 4096
# The keys are stored in "~/.ssh" as id_rsa and id_rsa.pub by default.
# Now, transfer the public key to the server.
scp ~/.ssh/id_rsa.pub Username@123.445.566.233:~/.ssh/authorized_keys    
# Replace the Username and IP with your own Username and Server IP.
</code></pre>

  <p>
    Ok, if you connect now to your server through SSH, you will connect directly, without having to input a password. Now, let's continue with the next step.
  </p>

    <h3 id="disable-password-login">
      Disable password login
    </h3>

  <p>
    Edit the file&nbsp;<i>/etc/ssh/sshd_config </i>using some editor like Nano or Vim. First, search for the <b>KbdInteractiveAuthentication</b> line and change the value to no. This way is not possible to use a keyboard during&nbsp;authentication. Next thing we have to change is&nbsp; <b>PasswordAuthentication</b>. Again, the default value is yes, but we’ll be setting it to no.
  </p>

  <p class="msg msg--info">
    Some people may say something like "Change the ssh port to another one", but a real hacker (most likely a bot) will scan your ports searching for it, so this act is stupid and annoying without any good reason.
  </p>

  <p class="msg msg--info">
    You can also disable root login, but since your user will surely have sudo privileges... well, I leave up to you to decide if it is worth it (I have my root login disable).
  </p>

    <h3 id="remove-weak-prime-numbers">
      Remove weak prime numbers
    </h3>

  <p>
    The client and the server use these moduli to negotiate a secure key. Remove the small ones by runnings these commands:
  </p>
<pre class="line-numbers  language-bash"><code>cp /etc/ssh/moduli ~/copy_moduli 
awk '$5 &gt;= 3071' /etc/ssh/moduli &gt; /etc/ssh/moduli.safe
mv /etc/ssh/moduli.safe /etc/ssh/moduli    </code></pre>

  <p>
    The first command makes a security copy before changing the moduli in the home folder of your user. The second command looks for lines in /etc/ssh/moduli, which on the fifth line have a value bigger than 3071 and writes those in the moduli.safe file. Then, the third command replace the moduli using the moduli.safe file.
  </p>

    <h3 id="allow-strong-cyphers-only">
      Allow strong cyphers only
    </h3>

  <p>
    We are going to allow only the most secure cyphers. Create a new file <i>/etc/ssh/sshd_config.d/ssh_hardening.conf</i>. Then, add this content exactly as it is displayed:
  </p>
<pre class="line-numbers  language-bash"><code>KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com
HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com  </code></pre>

    <h2 id="bonus">
      Bonus
    </h2>

  <p>
    With all I mention above should be more than enough, the following tips are optional... and will take you more than just a couple of minutes.
  </p>

    <h3 id="usenbspmulti-factor-authentication">
      Use&nbsp;Multi Factor Authentication
    </h3>

  <p>
    First, update your system:
  </p>
<pre class="line-numbers  language-bash"><code>sudo apt update
sudo apt upgrade -y</code></pre>

  <p>
    Now, install the&nbsp;<i>libpam-google-authenticator</i> package.
  </p>
<pre class="line-numbers  language-bash"><code>sudo apt install libpam-google-authenticator
</code></pre>

  <p>
    For MFA, if I'm not mistaken, you will have to enable again the <b>KbdInteractiveAuthentication</b> line in&nbsp;<i>/etc/ssh/sshd_config.</i>
  </p>

  <p>
    Once the PAM app is installed you will need to use a helper app that comes with the PAM to generate a Time-Based One-Time Password (TOTP) key for the user you want to add a second factor to. This key is generated on a per user basis, and as a result is not system-wide.&nbsp;To do this simply run:
  </p>
<pre class="line-numbers  language-bash"><code>google-authenticator</code></pre>

  <p>
    Upon running the command, you’ll be asked a few questions. The first one asks if authentication tokens should be time-based. We want to select <b>y</b>:
  </p>
<pre class="line-numbers  language-bash"><code>Do you want authentication tokens to be time-based (y/n): y</code></pre>

  <p>
    Once we select yes, the app will generate a QR code that can be scanned within your authenticator app of choice.
  </p>

  <p>
    This PAM allows for time-based or sequential-based tokens. Using sequential-based tokens mean the code starts at a certain point and then increments the code after every use. Using time-based tokens mean the code changes randomly after a certain time elapses (usually 60s). We’ll stick with time-based because that is what apps like Google Authenticator anticipate.
  </p>

  <p>
    The remaining questions inform the PAM how to function. We’ll go through them one by one.
  </p>
<pre class="line-numbers  language-bash"><code>Do you want me to update your "/home/zephr/.google_authenticator" file? (y/n)  </code></pre>

  <p>
    This writes the key and options to the <b>~/.google_authenticator</b> file. If you select no, then the program will quit and nothing is saved which in turn results in the authenticator application not working. Therefore we want to select <b>yes </b>for this!&nbsp;
  </p>
<pre class="line-numbers  language-html"><code>By default, tokens are good for 30 seconds and in order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with poor
time synchronization, you can increase the window from its default
size of 1:30min to about 4min. Do you want to do so (y/n) n</code></pre>

  <p>
    Selecting yes for this question enables up to 8 valid codes in a moving four minute window. By answering no, you limit it to 3 valid codes in a 90 second rolling window.
  </p>

  <p>
    Unless you find issues with the 90 second window, answering no is the more secure choice.
  </p>
<pre class="line-numbers  language-html"><code>If the computer that you are logging into isn't hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y</code></pre>

  <p>
    Rate limiting means a remote attacker can only attempt a certain number of guesses before being blocked. I recommend you to answer <b>yes</b>.
  </p>

  <p>
    Once you finish this setup, if you want to back up your secret key, you can copy the <b>~/.google-authenticator</b> file to a trusted location.&nbsp;
  </p>

  <p>
    Once we've been through the steps to configure google authenticator, the next step is to setup our SSH config to allow authenticator to function:
  </p>
<pre class="line-numbers  language-bash"><code>sudo nano /etc/pam.d/sshd</code></pre>

  <p>
    Add the following line to the bottom of the file:
  </p>
<pre class="line-numbers  language-bash"><code># Standard Un*x password updating.
@include common-password
auth required pam_google_authenticator.so nullok  </code></pre>

  <p>
    The <b>nullok</b> word at the end of the last line tells the PAM that this authentication method is optional. This allows users without a OATH-TOTP token to still log in using their SSH key. If you remove <b>nullok</b>&nbsp;from the line, this MFA would be mandatory.
  </p>

  <p>
    Next, we’ll configure SSH to support this kind of authentication. Open the SSH configuration file for editing.
  </p>
<pre class="line-numbers  language-bash"><code>sudo nano /etc/ssh/sshd_config</code></pre>

  <p>
    &nbsp;We are going to make SSH aware of MFA by adding AuthenticationMethods and UsePAM:
  </p>
<pre class="line-numbers  language-bash"><code># To disable tunneled clear text passwords, change to no here!
PasswordAuthentication no
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)


#ChallengeResponseAuthentication yes
KbdInteractiveAuthentication yes
UsePAM yes
AuthenticationMethods publickey,password publickey,keyboard-interactive</code></pre>

  <p>
    Save the config and restart the SSH service.
  </p>
<pre class="line-numbers  language-bash"><code>sudo systemctl reload sshd.service</code></pre>

  <p>
    Now, you have MFA for your SSH.
  </p>

    <h3 id="enable-firewall-and-make-use-ofnbspratelimiting">
      Enable Firewall and make use of&nbsp;Rate-Limiting
    </h3>

  <p>
    First, install Uncomplicated Firewall(UFW).
  </p>
<pre class="line-numbers  language-bash"><code>sudo apt install ufw
</code></pre>

  <p>
    Now, set a rate limit:
  </p>
<pre class="line-numbers  language-bash"><code>## ufw limit ssh various usage ##
ufw limit ssh comment 'Rate limit for openssh server'</code></pre>

  <p>
    When a limit rule is used, ufw will normally allow the connection but will deny connections if an IP address attempts to initiate six or more connections within thirty seconds.
  </p>

  <p>
    You can also allow or disallow connections from specific IPs:
  </p>
<pre class="line-numbers  language-bash"><code>   sudo ufw allow from 1.2.3.4 to any port 22</code></pre>

  <p>
    The above example only allows connections from 1.2.3.4 to port 22.
  </p>

    <h3 id="set-up-fail2ban">
      Set up Fail2Ban
    </h3>

  <p>
    We can go a little further by setting up Fail2Ban.&nbsp;Fail2Ban essentially actively looks out for signs of potential password authentication abuses to filter out IP addresses and regularly update the system firewall to suspend these IP addresses for a certain period.
  </p>

  <p>
    To install and setup Fail2Ban, run the following commands:
  </p>
<pre class="line-numbers  language-bash"><code>sudo apt install fail2ban
sudo cp /etc/fail2ban/jail.{conf,local}
sudo nano /etc/fail2ban/jail.local</code></pre>

  <p>
    To configure Fail2Ban, modify the following lines:
  </p>
<pre class="line-numbers  language-bash"><code>bantime = 1d</code></pre>

  <p>
    If you assign a negative value, the ban will be permanent.
  </p>
<pre class="line-numbers  language-bash"><code>findtime = 10m</code></pre>

  <p>
    <b>findtime</b>&nbsp;defines&nbsp;the time-duration allowed between consecutive login attempts. If the multiple login attempts were made within the time defined by findtime, a ban would be set on the IP.
  </p>
<pre class="line-numbers  language-bash"><code>maxretry = 5</code></pre>

  <p>
    <b>maxretry</b>&nbsp;defines&nbsp; the exact number of failed login attempts allowed within the findtime. If the number of failed-authorization attempts within the findtime exceeds the maxretry value, the IP would be banned from logging back in.
  </p>

  <p>
    Fail2ban also allows you to grant immunity to IP addresses and IP ranges of your choice.
  </p>
<pre class="line-numbers  language-bash"><code>ignoreip = 127.0.0.1/8 ::1 222.222.222.222 192.168.55.0/24</code></pre>

  <p>
    Upon setting all the options you want, simply start the service then check the status:
  </p>
<pre class="line-numbers  language-bash"><code>sudo systemctl start fail2ban
sudo systemctl status fail2ban</code></pre>

    <h2 id="credits">
      Credits
    </h2>

  <p>
    I found all this tweaks and tricks in random sources from internet, but to sum it all, all of them can be found in two webpages, so the credit goes to the authors of <a href="https://disknotifier.com/blog/simple-ssh-security/" target="_blank">https://disknotifier.com/blog/simple-ssh-security/</a> and <a href="https://blog.zsec.uk/locking-down-ssh-the-right-way/" target="_blank">https://blog.zsec.uk/locking-down-ssh-the-right-way</a>/.
  </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Markdown Beginner Guide</title>
        <author>
            <name>Jonathan Ródenas López</name>
        </author>
        <link href="https://baronhez.github.io/markdown-beginner-guide/"/>
        <id>https://baronhez.github.io/markdown-beginner-guide/</id>

        <updated>2022-08-27T14:20:02+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://baronhez.github.io/media/posts/8/markdown-2.jpg" alt="" />
                    I am&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://baronhez.github.io/media/posts/8/markdown-2.jpg" alt="" />
                
    <h2 id="i-am-not-an-expert-but-this-is-more-than-enough-for-me">
      I am not an expert, but this is more than enough for me
    </h2>

  <p>
    Markdown is more complex than you think, is not only about headings and tables, you can also make complex graphs and even network representations (I'm not joking with this). Today I will share with you, fellow developer, my own beginner guide for Markdown.
  </p>
<pre class="line-numbers  language-html"><code># Heading H1

## Heading H2

### Heading H3

#### Heading H4 

##### Heading H5

###### Heading H6

This is normal text

**This is bold text**

_This is italic text_

*This is also italic text*

- This
- is
- an 
- unordened
- list    

1. This
2. is
3. a
4. list
1. Ordered 
   1. If you use
   2. Tab
      1. It is possible
      2. to use
      3. subsections
         1. really cool
         
[This text has a link to www.google.com](www.google.com)

[This text displays an image if you click on it](./path/to/image/example.jpg)

![This alternative text displays an image if you click on it](./path/to/image/example.jpg)

&gt;"This text is a quote"
&gt;
&gt;-Jonathan  

~~Text through~~

Table:

| Name | Content | Price |
|------|---------|-------|
| Name | Content | Price |
| Name | Content | Price |
|------|---------|-------|
|------|---------|-------|
|------|---------|-------|
| Name | Content | Price |
| Name | Content | Price |
| Name | Content | Price |
| Name | Content | Price |
| Name | Content | Price |
|------|---------|-------|
|------|---------|-------|

To put some code, use inline code, like `print("Hello, you beaty thing")`

But the best practices is to use code snippets, indicating the lenguage:

````java
int b = a + c;
systemprintoutln(b);  
````
</code></pre>

  <p>
    Let's end this with some tricky stuff.
  </p>

  <p>
    Take a look into <a href="https://mermaid-js.github.io/mermaid/#/" target="_blank">Mermaid</a>. It allows us to make diagrams and visualizations.
  </p>
<pre class="line-numbers  language-html"><code>```mermaid
graph LR
    subgraph Name 1
    A(internet) --&gt; B[your server]
    end
    subgraph Name 2
    B --&gt; D[whoami1]
    E[ubuntu test] --&gt; D
    end
    subgraph Name 3
    B --&gt; G[whoami 2]
    end
    E-..-&gt; G
```  
</code></pre>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/8/markdown.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/8/responsive/markdown-xs.PNG 300w ,https://baronhez.github.io/media/posts/8/responsive/markdown-sm.PNG 480w ,https://baronhez.github.io/media/posts/8/responsive/markdown-md.PNG 768w ,https://baronhez.github.io/media/posts/8/responsive/markdown-lg.PNG 1024w ,https://baronhez.github.io/media/posts/8/responsive/markdown-xl.PNG 1360w ,https://baronhez.github.io/media/posts/8/responsive/markdown-2xl.PNG 1600w"  height="392" width="871" alt="" />
      <figcaption>This is the final graph. Compare the code snippet with the graph to know how to create this diagram.</figcaption>
    </figure>

  <p>
    I recommend you to check mermaid and make more complex diagrams if you work with networks in a daily basis, because it is truly useful for this purpose.&nbsp;
  </p>

  <p>
    Thanks for reading my quick guide of Markdown. It is short, but the best things in life are short, and I hate to spend 20 minutes reading the filling of some random article from a guide in the internet about how markdown help some developer to cope with the dead of his lost cousin. Guides should get straight to the point :)
  </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How to install and activate Windows 10 and Windows 11 completely for free (the easiest way)</title>
        <author>
            <name>Jonathan Ródenas López</name>
        </author>
        <link href="https://baronhez.github.io/how-to-install-and-activate-windows-10-and-windows-11-completely-for-free-the-easiest-way/"/>
        <id>https://baronhez.github.io/how-to-install-and-activate-windows-10-and-windows-11-completely-for-free-the-easiest-way/</id>
            <category term="Windows"/>

        <updated>2022-08-25T03:12:05+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://baronhez.github.io/media/posts/5/wallhaven-x8ye3z.jpg" alt="" />
                    
    <figure class="post__image post__image--wide">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/windows-AigsWJmvoEo-unsplash-2-2xl-2.jpg" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-xs.jpg 300w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-sm.jpg 480w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-md.jpg 768w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-lg.jpg 1024w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-xl.jpg 1360w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-2xl.jpg 1600w"  height="1067" width="1600" alt="" />
      
    </figure>

    <h2 id="trust-me-it-is-completely-easy-following-this-guide">
      Trust me, it is completely easy following this guide.
    </h2>

  <p>
    Hello! If you want to configure a computer to have Windows 10 activated for free (all of this works also for Windows 11 because Microsoft devs repeated the licensing system and like 90% of the internal functionality) then you will have to follow some simple steps.
  </p>

  <p>
    <b>Step 1:</b> You must get an ISO of w10 or w11 from anywhere.
<br>You can get it from <a href="https://www.microsoft.com/en-us/software-download" target="_blank">official sites</a> or from <a href="https://linuxct.space/Windows/" target="_blank">mirrors</a>:
  </p>

  <p>
    <b>W11 ISO
</b><br><u>Microsoft official:
</u><br><a href="https://www.microsoft.com/en-us/software-download/windows11" class="" target="_blank">https://www.microsoft.com/en-us/software-download/windows11
<br></a><u>Mirror:
</u><br><a href="https://linuxct.space/Windows/" class="" target="_blank">https://linuxct.space/Windows/</a>
  </p>

  <p>
    <b>W10 ISO:
</b><br><u>Microsoft official</u>:
<br><a href="https://www.microsoft.com/en-us/software-download/windows10" class="" target="_blank">https://www.microsoft.com/en-us/software-download/windows10
<br></a><u>Pirated Windows</u>, in case you want to choose a specific version:
<br><a href="https://tb.rg-adguard.net/public.php" target="_blank">https://tb.rg-adguard.net/public.php</a>
  </p>

  <p class="msg msg--highlight">
    <em><b>Attention:</b></em>
<br>As such, if you feel like it, you can download an ISO previously debloated by others and then you can go straight to the heart of the matter.<br><a href="https://ameliorated.info/documentation.html" target="_blank">https://ameliorated.info/documentation.html</a>
  </p>

  <p>
    Ok, and now?
  </p>

  <p>
    <font color="#f2f2f5"><b>Step 2:&nbsp;</b></font>Flash the ISO on a pendrive with at least 8 gigabytes of space (it's a lot, I know, but it's a big ISO).
<br>You have several options to do it, but if you already have another PC running Windows, I recommend you Rufus:
  </p>

  <p>
    Here is a quick tutorial:
  </p>

  <p>
    <a href="https://www.youtube.com/watch?v=Wt0Q-DBejIw" target="_blank">https://www.youtube.com/watch?v=Wt0Q-DBejIw</a>
  </p>

  <p>
    Here you can download the program:
  </p>

  <p>
    <a href="https://github.com/pbatard/rufus/releases/download/v3.17/rufus-3.17.exe" target="_blank">https://github.com/pbatard/rufus/releases/download/v3.17/rufus-3.17.exe</a>
  </p>

  <p>
    If you have a Linux PC, I recommend you Ventoy:
  </p>

  <p>
    <a href="https://linuxkamarada.com/en/2020/07/29/ventoy-create-a-multiboot-usb-drive-by-simply-copying-iso-images-to-it/" target="_blank">https://linuxkamarada.com/en/2020/07/29/ventoy-create-a-multiboot-usb-drive-by-simply-copying-iso-images-to-it/</a>
  </p>

  <p>
    Or&nbsp;SUSE imagewriter:&nbsp;<a href="https://software.opensuse.org/package/imagewriter" target="_blank">https://software.opensuse.org/package/imagewriter</a>
  </p>

  <p>
    <b>Step 3:</b> Insert the flashed usb into the machine where you want to install windows and once the installation environment starts, we can freely hit next until we&nbsp;get to the part that asks for an activation code.
<br>We have two options:
<br>We put one of these:
<br><a href="https://gist.github.com/Azhe403/d261f2aadccfc2fb20e00414342a3093" target="_blank">https://gist.github.com/Azhe403/d261f2aadccfc2fb20e00414342a3093
<br></a>Or we click the "I do not have an activation code" to continue with the installation.
  </p>

  <p>
    Well, assuming you haven't put in one of the activation codes I've put above, let's do a little trick to activate Windows.
  </p>

  <p>
    <b>Step 4:</b>&nbsp;You should be, by the end of the installation, in front of a empty windows desktop. Now we have to activate windows.
  </p>

  <p class="msg msg--highlight">
    If you want documentation for this step, go to <a href="https://massgrave.dev/" target="_blank">https://massgrave.dev/</a>
  </p>

  <p>
    Let's enter this webpage:<br><a href="https://github.com/massgravel/Microsoft-Activation-Scripts/releases" target="_blank">https://github.com/massgravel/Microsoft-Activation-Scripts/releases</a>
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-2.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-2-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-2-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-2-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-2-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-2-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-2-2xl.PNG 1600w"  height="196" width="895" alt="Pick the latest release of the program, in my case was the 1.6 version." />
      <figcaption>Pick the latest release of the program, in my case was the 1.6 version. Download the .7z file.</figcaption>
    </figure>

  <p>
    Now, we have to unzip this file. But we do not have any zip program yet. Let's jump there to another webpage in order to download useful programs. This webpage is <a href="https://ninite.com/" target="_blank">Ninite</a>. This webpage allows us to install multiple program just by executing one single exe file. Once you have marked the programs that you want to install, click the button "Get your ninite". Then, run the exe file you just downloaded.
  </p>

  <p>
    Ok, now that you have installed 7zip (I recommend that one, it's the best for me), unzip the file we previously downloaded. For me was <i>MAS_1.6_Password_1234.7z. </i>The password is 1234 (obviously).
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-3.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-3-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-3-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-3-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-3-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-3-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-3-2xl.PNG 1600w"  height="48" width="356" alt="Now, enter the "All in one" version." />
      <figcaption>Now, enter the "All in one" version.</figcaption>
    </figure>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-4.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-4-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-4-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-4-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-4-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-4-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-4-2xl.PNG 1600w"  height="29" width="354" alt="Execute this file with admin privileges. Right click and then "Run as administrator"." />
      <figcaption>Execute this file with admin privileges. Right click and then "Run as administrator".</figcaption>
    </figure>

  <p>
    <i>&nbsp;</i>
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-5.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-5-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-5-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-5-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-5-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-5-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-5-2xl.PNG 1600w"  height="471" width="598" alt="If you want to activate only Windows, enter "1" using the keyboard. If you have installed Office in your computer, and you want to activate it, take into account that the activation only last 180 days. However, the windows activation is permanent using the first option." />
      <figcaption>If you want to activate only Windows, enter "1" using the keyboard. If you have installed Office in your computer, and you want to activate it, take into account that the activation only last 180 days. However, the windows activation is permanent using the first option.</figcaption>
    </figure>

  <p>
    Let the script run until all it's done. Then, check if windows have been activated.
  </p>

  <p>
    To check activation status in Windows 10, select the Start button, and then select Settings &gt; Update &amp; Security and then select Activation .  Your activation status will be listed next to Activation.
  </p>

  <p class="msg msg--highlight">
    Attention: An alternative to all of this is to use
<br><a href="https://github.com/kkkgo/KMS_VL_ALL">https://github.com/kkkgo/KMS_VL_ALL</a>
  </p>

  <p>
    Ok, by now you should have a windows 10 or 11 installed and activated in your computer :)
  </p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://baronhez.github.io/media/posts/5/wallhaven-x8ye3z.jpg" alt="" />
                
    <figure class="post__image post__image--wide">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/windows-AigsWJmvoEo-unsplash-2-2xl-2.jpg" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-xs.jpg 300w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-sm.jpg 480w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-md.jpg 768w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-lg.jpg 1024w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-xl.jpg 1360w ,https://baronhez.github.io/media/posts/5/responsive/windows-AigsWJmvoEo-unsplash-2-2xl-2-2xl.jpg 1600w"  height="1067" width="1600" alt="" />
      
    </figure>

    <h2 id="trust-me-it-is-completely-easy-following-this-guide">
      Trust me, it is completely easy following this guide.
    </h2>

  <p>
    Hello! If you want to configure a computer to have Windows 10 activated for free (all of this works also for Windows 11 because Microsoft devs repeated the licensing system and like 90% of the internal functionality) then you will have to follow some simple steps.
  </p>

  <p>
    <b>Step 1:</b> You must get an ISO of w10 or w11 from anywhere.
<br>You can get it from <a href="https://www.microsoft.com/en-us/software-download" target="_blank">official sites</a> or from <a href="https://linuxct.space/Windows/" target="_blank">mirrors</a>:
  </p>

  <p>
    <b>W11 ISO
</b><br><u>Microsoft official:
</u><br><a href="https://www.microsoft.com/en-us/software-download/windows11" class="" target="_blank">https://www.microsoft.com/en-us/software-download/windows11
<br></a><u>Mirror:
</u><br><a href="https://linuxct.space/Windows/" class="" target="_blank">https://linuxct.space/Windows/</a>
  </p>

  <p>
    <b>W10 ISO:
</b><br><u>Microsoft official</u>:
<br><a href="https://www.microsoft.com/en-us/software-download/windows10" class="" target="_blank">https://www.microsoft.com/en-us/software-download/windows10
<br></a><u>Pirated Windows</u>, in case you want to choose a specific version:
<br><a href="https://tb.rg-adguard.net/public.php" target="_blank">https://tb.rg-adguard.net/public.php</a>
  </p>

  <p class="msg msg--highlight">
    <em><b>Attention:</b></em>
<br>As such, if you feel like it, you can download an ISO previously debloated by others and then you can go straight to the heart of the matter.<br><a href="https://ameliorated.info/documentation.html" target="_blank">https://ameliorated.info/documentation.html</a>
  </p>

  <p>
    Ok, and now?
  </p>

  <p>
    <font color="#f2f2f5"><b>Step 2:&nbsp;</b></font>Flash the ISO on a pendrive with at least 8 gigabytes of space (it's a lot, I know, but it's a big ISO).
<br>You have several options to do it, but if you already have another PC running Windows, I recommend you Rufus:
  </p>

  <p>
    Here is a quick tutorial:
  </p>

  <p>
    <a href="https://www.youtube.com/watch?v=Wt0Q-DBejIw" target="_blank">https://www.youtube.com/watch?v=Wt0Q-DBejIw</a>
  </p>

  <p>
    Here you can download the program:
  </p>

  <p>
    <a href="https://github.com/pbatard/rufus/releases/download/v3.17/rufus-3.17.exe" target="_blank">https://github.com/pbatard/rufus/releases/download/v3.17/rufus-3.17.exe</a>
  </p>

  <p>
    If you have a Linux PC, I recommend you Ventoy:
  </p>

  <p>
    <a href="https://linuxkamarada.com/en/2020/07/29/ventoy-create-a-multiboot-usb-drive-by-simply-copying-iso-images-to-it/" target="_blank">https://linuxkamarada.com/en/2020/07/29/ventoy-create-a-multiboot-usb-drive-by-simply-copying-iso-images-to-it/</a>
  </p>

  <p>
    Or&nbsp;SUSE imagewriter:&nbsp;<a href="https://software.opensuse.org/package/imagewriter" target="_blank">https://software.opensuse.org/package/imagewriter</a>
  </p>

  <p>
    <b>Step 3:</b> Insert the flashed usb into the machine where you want to install windows and once the installation environment starts, we can freely hit next until we&nbsp;get to the part that asks for an activation code.
<br>We have two options:
<br>We put one of these:
<br><a href="https://gist.github.com/Azhe403/d261f2aadccfc2fb20e00414342a3093" target="_blank">https://gist.github.com/Azhe403/d261f2aadccfc2fb20e00414342a3093
<br></a>Or we click the "I do not have an activation code" to continue with the installation.
  </p>

  <p>
    Well, assuming you haven't put in one of the activation codes I've put above, let's do a little trick to activate Windows.
  </p>

  <p>
    <b>Step 4:</b>&nbsp;You should be, by the end of the installation, in front of a empty windows desktop. Now we have to activate windows.
  </p>

  <p class="msg msg--highlight">
    If you want documentation for this step, go to <a href="https://massgrave.dev/" target="_blank">https://massgrave.dev/</a>
  </p>

  <p>
    Let's enter this webpage:<br><a href="https://github.com/massgravel/Microsoft-Activation-Scripts/releases" target="_blank">https://github.com/massgravel/Microsoft-Activation-Scripts/releases</a>
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-2.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-2-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-2-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-2-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-2-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-2-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-2-2xl.PNG 1600w"  height="196" width="895" alt="Pick the latest release of the program, in my case was the 1.6 version." />
      <figcaption>Pick the latest release of the program, in my case was the 1.6 version. Download the .7z file.</figcaption>
    </figure>

  <p>
    Now, we have to unzip this file. But we do not have any zip program yet. Let's jump there to another webpage in order to download useful programs. This webpage is <a href="https://ninite.com/" target="_blank">Ninite</a>. This webpage allows us to install multiple program just by executing one single exe file. Once you have marked the programs that you want to install, click the button "Get your ninite". Then, run the exe file you just downloaded.
  </p>

  <p>
    Ok, now that you have installed 7zip (I recommend that one, it's the best for me), unzip the file we previously downloaded. For me was <i>MAS_1.6_Password_1234.7z. </i>The password is 1234 (obviously).
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-3.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-3-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-3-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-3-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-3-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-3-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-3-2xl.PNG 1600w"  height="48" width="356" alt="Now, enter the "All in one" version." />
      <figcaption>Now, enter the "All in one" version.</figcaption>
    </figure>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-4.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-4-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-4-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-4-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-4-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-4-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-4-2xl.PNG 1600w"  height="29" width="354" alt="Execute this file with admin privileges. Right click and then "Run as administrator"." />
      <figcaption>Execute this file with admin privileges. Right click and then "Run as administrator".</figcaption>
    </figure>

  <p>
    <i>&nbsp;</i>
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://baronhez.github.io/media/posts/5/1-5.PNG" sizes="100vw" srcset="https://baronhez.github.io/media/posts/5/responsive/1-5-xs.PNG 300w ,https://baronhez.github.io/media/posts/5/responsive/1-5-sm.PNG 480w ,https://baronhez.github.io/media/posts/5/responsive/1-5-md.PNG 768w ,https://baronhez.github.io/media/posts/5/responsive/1-5-lg.PNG 1024w ,https://baronhez.github.io/media/posts/5/responsive/1-5-xl.PNG 1360w ,https://baronhez.github.io/media/posts/5/responsive/1-5-2xl.PNG 1600w"  height="471" width="598" alt="If you want to activate only Windows, enter "1" using the keyboard. If you have installed Office in your computer, and you want to activate it, take into account that the activation only last 180 days. However, the windows activation is permanent using the first option." />
      <figcaption>If you want to activate only Windows, enter "1" using the keyboard. If you have installed Office in your computer, and you want to activate it, take into account that the activation only last 180 days. However, the windows activation is permanent using the first option.</figcaption>
    </figure>

  <p>
    Let the script run until all it's done. Then, check if windows have been activated.
  </p>

  <p>
    To check activation status in Windows 10, select the Start button, and then select Settings &gt; Update &amp; Security and then select Activation .  Your activation status will be listed next to Activation.
  </p>

  <p class="msg msg--highlight">
    Attention: An alternative to all of this is to use
<br><a href="https://github.com/kkkgo/KMS_VL_ALL">https://github.com/kkkgo/KMS_VL_ALL</a>
  </p>

  <p>
    Ok, by now you should have a windows 10 or 11 installed and activated in your computer :)
  </p>


  <p>
    <b>Extra optional steps:</b>&nbsp;
  </p>

  <ol>
    <li>You should <u>update Windows</u> right now, even if the install is fresh.</li><li>Debloat Windows deleting telemetry and other stuff: Run this on Powershell:&nbsp;<b style="font-style: italic;">iwr -useb https://git.io/debloat|iex</b>.<b style="font-style: italic;">&nbsp;</b>Or this:&nbsp;<b>iex ((New-Object
</b><br><b>System.Net.WebClient).DownloadString('https://git.io/JJ8R4'))</b>.</li><li>Disable startup programs. Enter <b>Windows Key+R</b>, write&nbsp;<b style="font-style: italic;">shell:startup</b>, hit enter<i>&nbsp;</i>and delete all the programs which start on startup.</li><li>Enter <b>Windows Key+R</b>, write&nbsp;<b>appwiz.cpl</b>, hit enter and uninstall all the&nbsp;unnecessary programs in your machine.<br></li>
  </ol>
            ]]>
        </content>
    </entry>
</feed>
